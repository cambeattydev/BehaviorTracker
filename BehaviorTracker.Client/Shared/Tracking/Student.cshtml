@inject HttpClient Http
@using BehaviorTracker.Shared
@if (_students != null)
{
    <table class="table">
        <tbody>
        @foreach (var student in _students)
        {
            <tr>
                <td>@student.StudentFirstName @student.StudentLastName</td>
                @foreach (var goal in student.Goals)
                {
                    <td>
                        @if (goal.GoalType == GoalType.YesNo)
                        {
                            <YesNoGoalAnswer GoalName="@goal.GoalDescription" GoalAnswer=""/>
                        }
                        else
                        {
                            <NumericGoalAnswer GoalName="@goal.GoalDescription"/>
                        }
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
}


@functions {
    Models.Student[] _students;
    IDictionary<long, IEnumerable<GoalAnswer>> _studentGoalAnswers;

    protected override async Task OnInitAsync()
    {
        _students = await Http.GetJsonAsync<Models.Student[]>("api/Student/Students");

        _studentGoalAnswers = _students.ToDictionary(student => student.StudentKey,
            student =>
                Http.GetJsonAsync<IEnumerable<GoalAnswer>>(
                    $"api/GoalAnswer/StudentGoalAnswers/{student.StudentKey}/{DateTime.Now.ToLocalTime().AddHours(-6)}")
                    .GetAwaiter().GetResult());
    }

}