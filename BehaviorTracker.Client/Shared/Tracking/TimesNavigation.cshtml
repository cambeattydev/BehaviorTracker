@using NodaTime
<nav aria-label="Page navigation example">
    
    <ul class="pagination justify-content-center">
        @*<li class="page-item">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>*@
        @for (var i = 0; i < timesDictionary.Count; i++)
        {
            var index = i;
            <li class="page-item d-flex align-items-stretch @(ActiveIndex == i ? "active" : "" )" onclick="@(() => SelectActiveIndex(index))">
                <a class="page-link" href="">@timesDictionary.Values.ElementAt(i)</a>
            </li>
        }
        @*<li class="page-item">
            <a class="page-link" href="#" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>*@
    </ul>
</nav>

@functions {

    protected IDictionary<TimeSpan, string> timesDictionary;
    
    [Parameter]
    int ActiveIndex { get; set; }

    protected override void OnInit()
    {
        timesDictionary = new Dictionary<TimeSpan, string>
        {
            {new TimeSpan(0,0,0), "Arrival"} 
        };
        for(int i =9; i < 15; i++)
        {
            timesDictionary.Add(new TimeSpan(i,0,0), i <= 12 ? $"{i}:00-{i}:30" : $"{i-12}:00-{i-12}:30");
            timesDictionary.Add(new TimeSpan(i,30,0), i <= 12 ? $"{i}:30-{i+1}:00" : $"{i-12}:30-{i-11}:00");
        }
        timesDictionary.Add(new TimeSpan(15, 0, 0), $"3:00-3:30");
        timesDictionary.Add(new TimeSpan(15, 30, 0), "Dismissal");
        
        FindIndexBasedOnNow();
    }

    void FindIndexBasedOnNow()
    {
        //Add hours is used here since toLocalTime doesn't work
        var now = DateTime.Now.ToLocalTime().AddHours(-6);
        var timeSpan = now.TimeOfDay;
        Console.WriteLine($"Now: {now}");
        Console.WriteLine($"timeSpan: {timeSpan}");
        for (int i = 0; i < timesDictionary.Count ; i++)
        {
            var kvp = timesDictionary.ElementAt(i);
            Console.WriteLine($"Checking: {kvp.Key}");
            if (timeSpan.CompareTo(kvp.Key) > 0)
            {
                ActiveIndex = i;
            }
            else
            {
                break;
            }
        }
    }

    void SelectActiveIndex(int i)
    {
        ActiveIndex = i;
    }
   
}