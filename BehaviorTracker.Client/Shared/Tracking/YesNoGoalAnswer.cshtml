@using Microsoft.AspNetCore.Blazor.RenderTree
@inject HttpClient _httpClient
<div class="form-group">
    <label for="GoalKey@(Answer.GoalKey)-Answer">@GoalName</label>
    @if (Answer != null)
    {
        <select class="form-control" id="GoalKey@(Answer.GoalKey)-Answer" bind="@Answer.Answer" onblur="@SaveAnswer">
            @* For now this must be done, because blazor won't be able to render correctly on init *@
            @foreach (var option in options)
            {
                <option value="@option">@option</option>
            }
        </select>
    }
    else
    {
        <p>Answer is null</p>
    }
</div>

@functions
{

    private readonly string[] options = new[]
    {
        string.Empty, true.ToString(), false.ToString()
    };
    
    [Parameter]
    string GoalName { get; set; } 
    [Parameter]
    GoalAnswer Answer { get; set; }

    async Task SaveAnswer()
    {
        if (Answer.GoalAnswerKey < 1)
        {
            var response = await _httpClient.PostJsonAsync<GoalAnswer>("/api/GoalAnswer/GoalAnswer", Answer);
            Answer.GoalAnswerKey = response.GoalAnswerKey;
        }
        else
        {
            Console.WriteLine("Going to have to put this one");
        }
    }    
}
