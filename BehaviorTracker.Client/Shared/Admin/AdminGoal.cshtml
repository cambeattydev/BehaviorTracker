@inject HttpClient Http
@using BehaviorTracker.Client.Shared.Common

<div class="col-12">
    <div id="StudentKey@(Model.StudentKey)Accordion">
        <div class="card">
            <div class="card-header" id="StudentKey@(Model.StudentKey)Header">
                <h5 class="mb-0">
                    <button class="btn btn-link @(_editMode ? "d-none" : "")" data-toggle="collapse" data-target="#StudentKey@(Model.StudentKey)Body" aria-expanded="true" aria-controls="@Model.StudentFirstName @Model.StudentLastName">
                        @Model.StudentFirstName @Model.StudentLastName
                    </button>
                    <form class="form-inline @(!_editMode ? "d-none" : "")" style="font-size: .75em;" onsubmit="@Save">
                        <div class="form-group">
                            <label for="FirstName-@Model.StudentKey">First Name</label>
                            <input type="text" class="form-control" id="FirstName-@Model.StudentKey" aria-describedby="First Name" placeholder="First Name" bind="@Model.StudentFirstName"/>
                        </div>
                        <div class="form-group">
                            <label for="LastName-@Model.StudentKey">Last Name</label>
                            <input type="text" class="form-control" id="LastName-@Model.StudentKey" aria-describedby="Last Name" placeholder="Last Name" bind="@Model.StudentLastName"/>
                        </div>
                        <button type="button" class="btn btn-link" aria-label="Cancel" onclick="@Cancel">
                            <span class="oi oi-x" style="color: red"></span>
                        </button>
                        <button type="submit" class="btn btn-link" aria-label="Save">
                            <span class="oi oi-check" style="color: green"></span>
                        </button>
                    </form>
                    <button class="btn btn-link @(_editMode ? "d-none" : "")" style="font-size: .75em;" onclick="@Edit" aria-label="Edit">
                        <span class="oi oi-pencil"></span>
                    </button>
                    <button class="btn btn-link @(_editMode ? "d-none" : "")" style="font-size: .75em; color: red" onclick="@Delete" aria-label="Delete">
                        <span class="oi oi-trash"></span>
                    </button>

                </h5>
            </div>
            <div id="StudentKey@(Model.StudentKey)Body" class="collapse show" aria-labelledby="StudentKey@(Model.StudentKey)Header" data-parent="#StudentKey@(Model.StudentKey)Accordion">
                <div class="card-body">
                    <h5>Goals</h5>
                    <ul>
                        @if (Model.Goals != null)
                        {
                            foreach (var goal in Model.Goals)
                            {
                                <li>@goal.GoalDescription</li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@functions
{
    
    [Parameter]
    Client.Models.Student Model { get; set; }
    
    Client.Models.Student OriginalModel { get; set; }
    
    [Parameter]
    Action<Models.Student> DeleteStudent { get; set; }
    
    //[CascadingParameter] Modal _modal { get; set; }

    bool _editMode;

    protected override void OnInit()
    {
        if (Model == null)
        {
            Model = new Models.Student();
           
        }
        if (Model.StudentKey < 1)
        {
            _editMode = true;
        }
        
    }

    void Delete()
    {
        DeleteStudent(Model);
    }

    void Edit()
    {
        _editMode = true;
        OriginalModel = Model.Copy();
    }

    void Cancel()
    {
        if (Model.StudentKey > 0)
        {
            Model = OriginalModel;
            _editMode = false;
        }
        else
        {
            DeleteStudent(Model);

        }

    }
    
    async Task Save()
    {
        _editMode = false;
        try
        {
            var newModel = await Http.PostJsonAsync<Client.Models.Student>("/api/Student/Student", Model);
            Model = newModel;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

}