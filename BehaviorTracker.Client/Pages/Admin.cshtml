@page "/Admin"
@using BehaviorTracker.Client.Shared.Common
@using Student = BehaviorTracker.Client.Models.Student

@inject HttpClient Http
<h3>Students</h3>

@if (_students != null)
{
       foreach (var student in _students)
       {
           <AdminStudent Model="@student" DeleteStudent="@DeleteStudent"/>
       }
    <AddButton OnAdd="@AddStudent" ButtonText="Add Student"/>
}
else
{
    <spinner/>
}

@functions
{
    IList<Models.Student> _students;

    protected override async Task OnInitAsync()
    {
        _students = await Http.GetJsonAsync<IList<Models.Student>>("api/Student/GetStudentsWithGoalsAndAvailableAnswers");
    }

    void AddStudent()
    {
        if (_students == null || !_students.Any())
        {
            _students = new List<Models.Student>
            {
                new Models.Student
                {
                    StudentKey = 0,
                    Goals = new List<Models.Goal>()
                }
            };
            base.StateHasChanged();
            return;
        }
        var minStudentKey = _students.Min(s => s.StudentKey);
        var newStudent = new Models.Student
        {
            StudentKey = minStudentKey > 0 ? 0 : minStudentKey,
            Goals = new List<Models.Goal>()
        };


        _students.Add(newStudent);
        base.StateHasChanged();
    }

    void DeleteStudent(Models.Student student)
    {
        Console.WriteLine("Begin DeleteStudent");
        var deleted = _students.Remove(student);
        Console.WriteLine("StudentRemoved");
        if (deleted)
        {
            Console.WriteLine("Student Deleted");
            base.StateHasChanged();
            Console.WriteLine("StudentDeleted after StateHasChanged");
        }
        Console.WriteLine("End StudentDeleted");
    }

}